Задание 1
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <corecrt_share.h>

#define N 10
#define	A 1
#define	B 10
#define	C 1
#define	D 10

int RandomInt(int a, int b)
{
	return a + rand() % (b - a + 1);
}

double RandomFloat(double a, double b)
{
	return a + rand() * (b - a + 1) / RAND_MAX;
}


int main()
{
	srand(time(NULL));
	int a[N];
	double b[N];
	FILE* file;
	file = _fsopen("data5.txt", "w", _SH_DENYNO);
	for (int i = 0; i < N; i++)
	{
		a[i] = RandomInt(A, B);
		b[i] = RandomFloat(C, D);

		fprintf(file, "array_int[%d]=%d; array_double[%d]=%lf\n", i, a[i], i, b[i]);
	}
	fclose(file);
	for (int i = 0; i < N; i++)
	{
		printf("%d ",a[i]);
	}
	printf("\n");
	for (int i = 0; i < N; i++)
	{
		printf("%lf ", b[i]);
	}
}


Задание 2


#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <corecrt_share.h>

#define N 10
#define	A 1
#define	B 10


int RandomInt(int a, int b)
{
	return a + rand() % (b - a + 1);
}

double RandomFloat(double a, double b)
{
	return a + rand() * (b - a + 1) / RAND_MAX;
}


int main()
{
	srand(time(NULL));
	int a[N];
	for (int i = 0; i < N; i++)
	{
		int q = RandomInt(A, B);
		while (q%3!=0)
		{
			q = RandomInt(A, B);
		}
		a[i] = q;
	}

	for (int i = 0; i < N; i++)
	{
		if (i % 3 == 0)
		{
			printf("\n");
		}
		printf("%d ", a[i]);
	}
}




Задание 3
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <corecrt_share.h>

#define N 10
#define	A 1
#define	B 10


int RandomInt(int a, int b)
{
	return a + rand() % (b - a + 1);
}

double RandomFloat(double a, double b)
{
	return a + rand() * (b - a + 1) / RAND_MAX;
}


int main()
{
	srand(time(NULL));
	int a[N];
	for (int i = 0; i < N; i++)
	{
		a[i] = RandomInt(A, B);
	}
	
	int x = 0;
	for (int i = N - 1; i >= 0; i--)
	{
		if (a[i]%6==0 && a[i]>0)
		{
			printf("%d", a[i]);
			x = 1;
			break;
		}
	}
	if (x == 0)
	{
		printf("Net takih");
	}


}



Задание 4


#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <corecrt_share.h>

#define N 10
#define	A 1
#define	B 10


int RandomInt(int a, int b)
{
	return a + rand() % (b - a + 1);
}

double RandomFloat(double a, double b)
{
	return a + rand() * (b - a + 1) / RAND_MAX;
}


int main()
{
	srand(time(NULL));
	int a[N];
	FILE* file;
	file = _fsopen("data5.txt", "r", _SH_DENYNO);
	int s = RandomInt(A, B);
	while(s%3!=0)
		s = RandomInt(A, B);
	for (int i = 0; i < N; i++)
	{
		fscanf(file,"%d",a[i]);
		a[i] /= 3;
		printf("%d",a[i]);
	}
	fclose(file);

}
Задание 5


#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <corecrt_share.h>

#define N 10
#define	A 1
#define	B 10


int RandomInt(int a, int b)
{
	return a + rand() % (b - a + 1);
}

double RandomFloat(double a, double b)
{
	return a + rand() * (b - a + 1) / RAND_MAX;
}


int main()
{
	srand(time(NULL));
	int a[N];
	FILE* file;
	file = _fsopen("data5.txt", "w", _SH_DENYNO);
	int pch, onch;
	for (int i = 0; i < N; i++)
	{
		a[i] = RandomInt(A, B);
		fprintf(file, "%d\n", a[i]);
		if (a[i] > 0 && a[i] % 2 == 0)
			pch++;
		if (a[i] < 0 && a[i] % 2 == 1)
			onch++;
	}
	fclose(file);
	file = _fsopen("data5.txt", "a", _SH_DENYNO);
	fprintf(file,"Poloj chetnih = %d\n",pch);
	fprintf(file, "Ptricat nechetnih = %d\n", onch);
	fclose(file);

	

}
Задание 6


#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <corecrt_share.h>

#define N 10
#define M 10
#define	A 1
#define	B 10


int RandomInt(int a, int b)
{
	return a + rand() % (b - a + 1);
}

double RandomFloat(double a, double b)
{
	return a + rand() * (b - a + 1) / RAND_MAX;
}


int main()
{
	srand(time(NULL));
	int a[N][M], new_a[N][M];
	FILE* file;
	file = _fsopen("data5.txt", "w", _SH_DENYNO);
	for (int i = 0; i < N; i++)
	{
		for (int j = 0; j < M; j++)
		{
			a[i][j] = RandomInt(A, B);
			fprintf(file, "%d ", a[i][j]);
		}
		fprintf(file,"\n");
	}
	fclose(file);
	file = _fsopen("data5.txt", "r", _SH_DENYNO);
	int kotr = 0;
	for (int i = 0; i < N; i++)
	{
		for (int j = 0; j < M; j++)
		{
			fscanf(file, "%d", new_a[i][j]);


			int q = new_a[i][j], w=0;
			while (q > 0)
			{
				w += q % 10;
				q /= 10;
			}
			if (q % 3 == 0)
				kotr++;
		}
	}
	int sympolch = 0;
	for (int i = 0; i < N; i++)
	{
		if (a[i][M - 1] > 0 && a[i][M - 1] % 2 == 0)
		{
			sympolch += a[i][M - 1];
		}
	}

	int maks = A;
	for (int i = 0; i < N; i++)
	{
		for (int j = 0; j < M; j++)
		{
			if (new_a[i][j] > maks && new_a[i][j]%2==1 && new_a[i][j]%5==0)
				maks = new_a[i][j];
		}
	}

	fclose(file);

}
Задание 7

#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <corecrt_share.h>
#include <math.h>

#define N 10
#define	A 1
#define	B 10


int RandomInt(int a, int b)
{
	return a + rand() % (b - a + 1);
}

double RandomFloat(double a, double b)
{
	return a + rand() * (b - a + 1.0) / RAND_MAX;
}

int funk1(int *a, int len)
{
	int m,k=0;
	for (int i = 0; i < len; i++)
	{
		if (a[i] % 2 == 0)
		{
			m = a[i];
			break;
		}
	}
	for (int i = 0; i < len; i++)
	{
		if (a[i] < m)
			k++;
	}
	return k;
}

int funk2(int* a, int len)
{
	int min;
	for (int i = 0; i < len; i++)
	{
		if (a[i] > 0 && a[i] % 3 == 0)
		{
			min = a[i];
			break;
		}

	}
	for (int i = 0; i < len; i++)
	{
		if (a[i] > 0 && a[i] % 3 == 0 && a[i]<min)
			min = a[i];
	}
	return min;
}

int funk3(int* a, int len)
{
	int b = abs(a[RandomInt(len / 2, len - 1)]);
	int c = 0;
	while (b > 0)
	{
		c += b % 10;
		b /= 10;
	}
	return c;
}

int main()
{
	srand(time(NULL));
	int a[N];
	for (int i = 0; i < N; i++)
	{
		a[i] = RandomInt(A, B);
	}

}
Задание 8



#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <corecrt_share.h>
#include <math.h>

#define N 10
#define	A 1.0
#define	B 10.0


int RandomInt(int a, int b)
{
	return a + rand() % (b - a + 1);
}

double RandomFloat(double a, double b)
{
	return a + rand() * (b - a + 1.0) / RAND_MAX;
}

int funk1(double a[N][N])
{
	int midl = 0;
	int kol = 0;
	for (int i = 0; i < N; i++)
	{
		for (int j = 0; j < N; j++)
		{
			if (a[i][j]>0 && int(a[i][j])%7==0)
			{
				midl += a[i][j];
				kol++;
			}
		}
	}
	midl /= kol;
	kol = 0;
	for (int i = 0; i < N; i++)
	{
		for (int j = 0; j < N; j++)
		{
			if (a[i][j] > midl)
			{
				kol++;
			}
		}
	}
	return kol;
}

double funk2(double a[N][N])
{
	double s = 0;
	for (int i = 0; i < N; i++)
	{
		for (int j = 0; j < N; j++)
		{
			if (a[i][j] < 0)
				s += a[i][j];
		}
	}
	return s;
}

double funk3(double a[N][N])
{
	double min = a[0][0];
	for (int i = 0; i < N; i++)
	{
		for (int j = 0; j < N; j++)
		{
			if (i + j == N - 1 && a[i][j] < min)
				min = a[i][j];
		}
	}
	return min;
}

int main()
{
	srand(time(NULL));
	double a[N][N];
	for (int i = 0; i < N; i++)
	{
		for (int j = 0; j < N; j++)
		{
			a[i][j] = RandomFloat(A, B);
		}
	}

}